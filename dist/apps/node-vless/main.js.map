{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/utils.ts","webpack:///../../libs/vless-js/src/index.ts","webpack:///../../libs/vless-js/src/lib/vless-js.ts","webpack:///external commonjs \"pretty-cache-header\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"uuid\"","webpack:///external commonjs \"ws\"","webpack:///external node-commonjs \"http\"","webpack:///external node-commonjs \"node:dgram\"","webpack:///external node-commonjs \"node:dns\"","webpack:///external node-commonjs \"node:fs\"","webpack:///external node-commonjs \"node:net\"","webpack:///external node-commonjs \"node:path\"","webpack:///external node-commonjs \"node:stream/web\"","webpack:///external node-commonjs \"stream\"","webpack:///external node-commonjs \"url\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import { createReadStream, existsSync } from 'node:fs';\nimport { IncomingMessage, ServerResponse } from 'node:http';\nimport { resolve, join, extname } from 'node:path';\nimport { cacheHeader } from 'pretty-cache-header';\n\nconst mimeLookup = {\n  '.js': 'application/javascript,charset=UTF-8',\n  '.html': 'text/html,charset=UTF-8',\n  '.css': 'text/css; charset=UTF-8',\n};\nconst staticPath = 'dist/apps/cf-page/';\nconst file401 = 'dist/apps/node-vless/assets/401.html';\nlet filepath = null;\nexport function serverStaticFile(req: IncomingMessage, resp: ServerResponse) {\n  const url = new URL(req.url, `http://${req.headers['host']}`);\n  let fileurl = url.pathname;\n  fileurl = join(staticPath, fileurl);\n  console.log('....', fileurl);\n  filepath = resolve(fileurl);\n  console.log(filepath);\n\n  if (existsSync(filepath)) {\n    let fileExt = extname(filepath);\n    console.log('fileExt', fileExt);\n    let mimeType = mimeLookup[fileExt];\n\n    resp.writeHead(200, {\n      'Content-Type': mimeType,\n      'Cache-Control': cacheHeader({\n        public: true,\n        maxAge: '1year',\n        staleWhileRevalidate: '1year',\n      }),\n    });\n    return createReadStream(filepath).pipe(resp);\n  } else {\n    resp.writeHead(404);\n    resp.write('not found');\n    resp.end();\n    return resp;\n  }\n}\n\nexport function index401(req: IncomingMessage, resp: ServerResponse) {\n  const file401Path = resolve(file401);\n  if (existsSync(file401Path)) {\n    createReadStream(file401Path).pipe(resp);\n  } else {\n    resp.writeHead(401);\n    resp.write('UUID env not set');\n    resp.end();\n  }\n}\n\nexport function serverIndexPage(\n  req: IncomingMessage,\n  resp: ServerResponse,\n  uuid\n) {\n  // if()\n}\n","export {\n  delay,\n  makeReadableWebSocketStream,\n  closeWebSocket,\n  processVlessHeader,\n} from './lib/vless-js';\n","import { stringify } from 'uuid';\nexport function vlessJs(): string {\n  return 'vless-js';\n}\n\nexport function delay(ms: number) {\n  return new Promise((resolve, rej) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function makeReadableWebSocketStream(\n  ws: WebSocket | any,\n  earlyDataHeader: string,\n  log: Function\n) {\n  let readableStreamCancel = false;\n  return new ReadableStream<ArrayBuffer>({\n    start(controller) {\n      ws.addEventListener('message', async (e: { data: ArrayBuffer }) => {\n        // is stream is cancel, skip controller.enqueue\n        if (readableStreamCancel) {\n          return;\n        }\n        const vlessBuffer: ArrayBuffer = e.data;\n        // console.log('MESSAGE', vlessBuffer);\n        // console.log(`message is ${vlessBuffer.byteLength}`);\n        // this is not backpressure, but backpressure is depends on underying websocket can pasue\n        // https://streams.spec.whatwg.org/#example-rs-push-backpressure\n        controller.enqueue(vlessBuffer);\n      });\n      ws.addEventListener('error', (e: any) => {\n        log('socket has error');\n        readableStreamCancel = true;\n        controller.error(e);\n      });\n      ws.addEventListener('close', () => {\n        try {\n          log('webSocket is close');\n          // is stream is cancel, skip controller.close\n          if (readableStreamCancel) {\n            return;\n          }\n          controller.close();\n        } catch (error) {\n          log(`websocketStream can't close DUE to `, error);\n        }\n      });\n      // header ws 0rtt\n      const { earlyData, error } = base64ToArrayBuffer(earlyDataHeader);\n      if (error) {\n        log(`earlyDataHeader has invaild base64`);\n        closeWebSocket(ws);\n        return;\n      }\n      if (earlyData) {\n        controller.enqueue(earlyData);\n      }\n    },\n    pull(controller) {\n      // if ws can stop read if stream is full, we can implement backpressure\n      // https://streams.spec.whatwg.org/#example-rs-push-backpressure\n    },\n    cancel(reason) {\n      // TODO: log can be remove, if writestream has error, write stream will has log\n      log(`websocketStream is cancel DUE to `, reason);\n      if (readableStreamCancel) {\n        return;\n      }\n      readableStreamCancel = true;\n      closeWebSocket(ws);\n    },\n  });\n}\n\nfunction base64ToArrayBuffer(base64Str: string) {\n  if (!base64Str) {\n    return { error: null };\n  }\n  try {\n    // go use modified Base64 for URL rfc4648 which js atob not support\n    base64Str = base64Str.replace(/-/g, '+').replace(/_/g, '/');\n    const decode = atob(base64Str);\n    const arryBuffer = Uint8Array.from(decode, (c) => c.charCodeAt(0));\n    return { earlyData: arryBuffer.buffer, error: null };\n  } catch (error) {\n    return { error };\n  }\n}\n\nexport function closeWebSocket(socket: WebSocket | any) {\n  if (socket.readyState === socket.OPEN) {\n    socket.close();\n  }\n}\n\n//https://github.com/v2ray/v2ray-core/issues/2636\n// 1 字节\t  16 字节       1 字节\t       M 字节\t              1 字节            2 字节      1 字节\t      S 字节\t      X 字节\n// 协议版本\t  等价 UUID\t  附加信息长度 M\t(附加信息 ProtoBuf)  指令(udp/tcp)\t    端口\t      地址类型      地址\t        请求数据\n// 00                   00                                  01                 01bb(443)   02(ip/host)\n// 1 字节\t              1 字节\t      N 字节\t         Y 字节\n// 协议版本，与请求的一致\t附加信息长度 N\t附加信息 ProtoBuf\t响应数据\nexport function processVlessHeader(\n  vlessBuffer: ArrayBuffer,\n  userID: string\n  // uuidLib: any,\n  // lodash: any\n) {\n  if (vlessBuffer.byteLength < 24) {\n    // console.log('invalid data');\n    // controller.error('invalid data');\n    return {\n      hasError: true,\n      message: 'invalid data',\n    };\n  }\n  const version = new Uint8Array(vlessBuffer.slice(0, 1));\n  let isValidUser = false;\n  let isUDP = false;\n  if (stringify(new Uint8Array(vlessBuffer.slice(1, 17))) === userID) {\n    isValidUser = true;\n  }\n  if (!isValidUser) {\n    // console.log('in valid user');\n    // controller.error('in valid user');\n    return {\n      hasError: true,\n      message: 'invalid user',\n    };\n  }\n\n  const optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];\n  //skip opt for now\n\n  const command = new Uint8Array(\n    vlessBuffer.slice(18 + optLength, 18 + optLength + 1)\n  )[0];\n\n  // 0x01 TCP\n  // 0x02 UDP\n  // 0x03 MUX\n  if (command === 1) {\n  } else if (command === 2) {\n    isUDP = true;\n  } else {\n    return {\n      hasError: true,\n      message: `command ${command} is not support, command 01-tcp,02-udp,03-mux`,\n    };\n  }\n  const portIndex = 18 + optLength + 1;\n  const portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);\n  // port is big-Endian in raw data etc 80 == 0x005d\n  const portRemote = new DataView(portBuffer).getInt16(0);\n\n  let addressIndex = portIndex + 2;\n  const addressBuffer = new Uint8Array(\n    vlessBuffer.slice(addressIndex, addressIndex + 1)\n  );\n\n  // 1--> ipv4  addressLength =4\n  // 2--> domain name addressLength=addressBuffer[1]\n  // 3--> ipv6  addressLength =16\n  const addressType = addressBuffer[0];\n  let addressLength = 0;\n  let addressValueIndex = addressIndex + 1;\n  let addressValue = '';\n  switch (addressType) {\n    case 1:\n      addressLength = 4;\n      addressValue = new Uint8Array(\n        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\n      ).join('.');\n      break;\n    case 2:\n      addressLength = new Uint8Array(\n        vlessBuffer.slice(addressValueIndex, addressValueIndex + 1)\n      )[0];\n      addressValueIndex += 1;\n      addressValue = new TextDecoder().decode(\n        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\n      );\n      break;\n    case 3:\n      addressLength = 16;\n      const dataView = new DataView(\n        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\n      );\n      // 2001:0db8:85a3:0000:0000:8a2e:0370:7334\n      const ipv6 = [];\n      for (let i = 0; i < 8; i++) {\n        ipv6.push(dataView.getUint16(i * 2).toString(16));\n      }\n      addressValue = ipv6.join(':');\n      // console.log('---------', addressValue)\n      // seems no need add [] for ipv6\n      // if (addressValue) {\n      //   addressValue = `[${addressValue}]`;\n      // }\n      break;\n    default:\n      console.log(`invild  addressType is ${addressType}`);\n  }\n  if (!addressValue) {\n    // console.log(`[${address}:${port}] addressValue is empty`);\n    // controller.error(`[${address}:${portWithRandomLog}] addressValue is empty`);\n    return {\n      hasError: true,\n      message: `addressValue is empty, addressType is ${addressType}`,\n    };\n  }\n\n  return {\n    hasError: false,\n    addressRemote: addressValue,\n    portRemote,\n    rawDataIndex: addressValueIndex + addressLength,\n    vlessVersion: version,\n    isUDP,\n  };\n}\n","module.exports = require(\"pretty-cache-header\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"ws\");","module.exports = require(\"http\");","module.exports = require(\"node:dgram\");","module.exports = require(\"node:dns\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:net\");","module.exports = require(\"node:path\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { createServer } from 'http';\nimport { parse } from 'url';\nimport { WebSocketServer, WebSocket } from 'ws';\nimport { index401, serverStaticFile } from './app/utils';\nimport { validate } from 'uuid';\nimport { createReadStream } from 'node:fs';\nimport { setDefaultResultOrder } from 'node:dns';\nimport { createSocket, Socket as UDPSocket } from 'node:dgram';\n\nimport {\n  makeReadableWebSocketStream,\n  processVlessHeader,\n  delay,\n  closeWebSocket,\n} from 'vless-js';\nimport { connect, Socket } from 'node:net';\nimport { Duplex, Readable } from 'stream';\nimport {\n  TransformStream,\n  ReadableStream,\n  WritableStream,\n} from 'node:stream/web';\nconst port = process.env.PORT;\nconst userID = process.env.UUID || '';\n//'ipv4first' or 'verbatim'\nconst dnOder = process.env.DNSORDER || 'verbatim';\nif (dnOder === 'ipv4first') {\n  setDefaultResultOrder(dnOder);\n}\n\nlet isVaildUser = validate(userID);\nif (!isVaildUser) {\n  console.log('not set valid UUID');\n}\n\nconst server = createServer((req, resp) => {\n  if (!isVaildUser) {\n    return index401(req, resp);\n  }\n  const url = new URL(req.url, `http://${req.headers['host']}`);\n  // health check\n  if (req.method === 'GET' && url.pathname.startsWith('/health')) {\n    resp.writeHead(200);\n    resp.write('health 200');\n    resp.end();\n    return;\n  }\n\n  // index page\n  if (url.pathname.includes(userID)) {\n    const index = 'dist/apps/cf-page/index.html';\n    resp.writeHead(200, {\n      'Content-Type': 'text/html,charset=UTF-8',\n    });\n    return createReadStream(index).pipe(resp);\n  }\n  if (req.method === 'GET' && url.pathname.startsWith('/assets')) {\n    return serverStaticFile(req, resp);\n  }\n\n  const basicAuth = req.headers.authorization || '';\n  const authStringBase64 = basicAuth.split(' ')?.[1] || '';\n  const authString = Buffer.from(authStringBase64, 'base64').toString('ascii');\n  if (authString && authString.includes(userID)) {\n    resp.writeHead(302, {\n      'content-type': 'text/html; charset=utf-8',\n      Location: `./${userID}`,\n    });\n    resp.end();\n  } else {\n    resp.writeHead(401, {\n      'content-type': 'text/html; charset=utf-8',\n      'WWW-Authenticate': 'Basic',\n    });\n    resp.end();\n  }\n});\nconst vlessWServer = new WebSocketServer({ noServer: true });\n\nvlessWServer.on('connection', async function connection(ws, request) {\n  let address = '';\n  let portWithRandomLog = '';\n  try {\n    const log = (info: string, event?: any) => {\n      console.log(`[${address}:${portWithRandomLog}] ${info}`, event || '');\n    };\n    let remoteConnection: Duplex = null;\n    let udpClientStream: TransformStream = null;\n    let remoteConnectionReadyResolve: Function;\n    const earlyDataHeader = request.headers['sec-websocket-protocol'];\n    const readableWebSocketStream = makeReadableWebSocketStream(\n      ws,\n      earlyDataHeader,\n      log\n    );\n    let vlessResponseHeader: Uint8Array | null = null;\n\n    // ws  --> remote\n    readableWebSocketStream\n      .pipeTo(\n        new WritableStream({\n          async write(chunk: Buffer, controller) {\n            if (!Buffer.isBuffer(chunk)) {\n              chunk = Buffer.from(chunk);\n            }\n            if (udpClientStream) {\n              const writer = udpClientStream.writable.getWriter();\n              // nodejs buffer to ArrayBuffer issue\n              // https://nodejs.org/dist/latest-v18.x/docs/api/buffer.html#bufbuffer\n              await writer.write(\n                chunk.buffer.slice(\n                  chunk.byteOffset,\n                  chunk.byteOffset + chunk.length\n                )\n              );\n              writer.releaseLock();\n              return;\n            }\n            if (remoteConnection) {\n              await socketAsyncWrite(remoteConnection, chunk);\n              // remoteConnection.write(chunk);\n              return;\n            }\n            const vlessBuffer = chunk.buffer.slice(\n              chunk.byteOffset,\n              chunk.byteOffset + chunk.length\n            );\n            const {\n              hasError,\n              message,\n              portRemote,\n              addressRemote,\n              rawDataIndex,\n              vlessVersion,\n              isUDP,\n            } = processVlessHeader(vlessBuffer, userID);\n            address = addressRemote || '';\n            portWithRandomLog = `${portRemote}--${Math.random()} ${\n              isUDP ? 'udp ' : 'tcp '\n            } `;\n            if (hasError) {\n              controller.error(`[${address}:${portWithRandomLog}] ${message} `);\n            }\n            // const addressType = requestAddr >> 42\n            // const addressLength = requestAddr & 0x0f;\n            console.log(`[${address}:${portWithRandomLog}] connecting`);\n            vlessResponseHeader = new Uint8Array([vlessVersion![0], 0]);\n            const rawClientData = vlessBuffer.slice(rawDataIndex!);\n            if (isUDP) {\n              udpClientStream = makeUDPSocketStream(portRemote, address);\n              const writer = udpClientStream.writable.getWriter();\n              writer.write(rawClientData).catch(error=>console.log)\n              writer.releaseLock();\n              remoteConnectionReadyResolve(udpClientStream);\n            } else {\n              remoteConnection = await connect2Remote(portRemote, address, log);\n              remoteConnection.write(new Uint8Array(rawClientData));\n              remoteConnectionReadyResolve(remoteConnection);\n            }\n          },\n          close() {\n            // if (udpClientStream ) {\n            //   udpClientStream.writable.close();\n            // }\n            console.log(\n              `[${address}:${portWithRandomLog}] readableWebSocketStream is close`\n            );\n          },\n          abort(reason) {\n            // TODO: log can be remove, abort will catch by catch block\n            console.log(\n              `[${address}:${portWithRandomLog}] readableWebSocketStream is abort`,\n              JSON.stringify(reason)\n            );\n          },\n        })\n      )\n      .catch((error) => {\n        console.error(\n          `[${address}:${portWithRandomLog}] readableWebSocketStream pipeto has exception`,\n          error.stack || error\n        );\n        // error is cancel readable stream anyway, no need close websocket in here\n        // closeWebSocket(webSocket);\n        // close remote conn\n        // remoteConnection?.close();\n      });\n\n    await new Promise((resolve) => (remoteConnectionReadyResolve = resolve));\n    // remote --> ws\n    let responseStream = udpClientStream?.readable;\n    if (remoteConnection) {\n      responseStream = Readable.toWeb(remoteConnection);\n    }\n\n    // if readable not pipe can't wait fro writeable write method\n    await responseStream.pipeTo(\n      new WritableStream({\n        start() {\n          if (ws.readyState === ws.OPEN) {\n            ws.send(vlessResponseHeader!);\n          }\n        },\n        async write(chunk: Uint8Array, controller) {\n          // console.log('ws write', chunk);\n          if (ws.readyState === ws.OPEN) {\n            await wsAsyncWrite(ws, chunk);\n          }\n        },\n        close() {\n          console.log(\n            `[${address}:${portWithRandomLog}] remoteConnection!.readable is close`\n          );\n        },\n        abort(reason) {\n          closeWebSocket(ws);\n          console.error(\n            `[${address}:${portWithRandomLog}] remoteConnection!.readable abort`,\n            reason\n          );\n        },\n      })\n    );\n  } catch (error) {\n    console.error(\n      `[${address}:${portWithRandomLog}] processWebSocket has exception `,\n      error.stack || error\n    );\n    closeWebSocket(ws);\n  }\n});\n\nserver.on('upgrade', function upgrade(request, socket, head) {\n  const { pathname } = parse(request.url);\n\n  vlessWServer.handleUpgrade(request, socket, head, function done(ws) {\n    vlessWServer.emit('connection', ws, request);\n  });\n});\n\nserver.listen(\n  {\n    port: port,\n    host: '0.0.0.0',\n  },\n  () => {\n    console.log(`server listen in http://127.0.0.1:${port}`);\n  }\n);\n\nasync function connect2Remote(port, host, log: Function): Promise<Socket> {\n  return new Promise((resole, reject) => {\n    const remoteSocket = connect(\n      {\n        port: port,\n        host: host,\n        // https://github.com/nodejs/node/pull/46587\n        // autoSelectFamily: true,\n      },\n      () => {\n        log(`connected`);\n        resole(remoteSocket);\n      }\n    );\n    remoteSocket.addListener('error', () => {\n      reject('remoteSocket has error');\n    });\n  });\n}\n\nasync function socketAsyncWrite(ws: Duplex, chunk: Buffer) {\n  return new Promise((resolve, reject) => {\n    ws.write(chunk, (error) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve('');\n      }\n    });\n  });\n}\n\nasync function wsAsyncWrite(ws: WebSocket, chunk: Uint8Array) {\n  return new Promise((resolve, reject) => {\n    ws.send(chunk, (error) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve('');\n      }\n    });\n  });\n}\n\nfunction makeUDPSocketStream(portRemote, address) {\n  const udpClient = createSocket('udp4');\n  const transformStream = new TransformStream({\n    start(controller) {\n      /* … */\n      udpClient.on('message', (message, info) => {\n        controller.enqueue(\n          Buffer.concat([new Uint8Array([0, info.size]), message])\n        );\n      });\n      udpClient.on('error', (error) => {\n        console.log('udpClient error event', error);\n        controller.error(error);\n      });\n    },\n\n    async transform(chunk: ArrayBuffer, controller) {\n      //seems v2ray will use same web socket for dns query..\n      //And v2ray will combine A record and AAAA record into one ws message and use 2 btye for dns query length\n      for (let index = 0; index < chunk.byteLength; ) {\n        const lengthBuffer = chunk.slice(index, index + 2);\n        const udpPakcetLength = new DataView(lengthBuffer).getInt16(0);\n        const udpData = new Uint8Array(\n          chunk.slice(index + 2, index + 2 + udpPakcetLength)\n        );\n        index = index + 2 + udpPakcetLength;\n       await new Promise((resolve, reject)=>{\n        udpClient.send(udpData, portRemote, address, (err) => {\n          if (err) {\n            console.log('udps send error', err);\n            controller.error(`Failed to send UDP packet !! ${err}`);\n            safeCloseUDP(udpClient);\n          }\n          resolve(true)\n        });\n       })\n        index = index;\n      }\n\n      // console.log('dns chunk', chunk);\n      // console.log(portRemote, address);\n      // port is big-Endian in raw data etc 80 == 0x005d\n    },\n\n    flush(controller) {\n      safeCloseUDP(udpClient);\n      controller.terminate();\n    },\n  });\n  return transformStream;\n}\n\n\nfunction safeCloseUDP(client: UDPSocket){\n  try{\n    client.close()\n  }catch(error){\n    console.log('error close udp', error);\n  }\n\n}"],"names":["mimeLookup","staticPath","file401","filepath","req","resp","fileurl","URL","url","headers","pathname","join","console","log","resolve","existsSync","fileExt","extname","mimeType","writeHead","cacheHeader","public","maxAge","staleWhileRevalidate","createReadStream","pipe","write","end","file401Path","uuid","delay","makeReadableWebSocketStream","closeWebSocket","processVlessHeader","socket","readyState","OPEN","close","ms","Promise","rej","setTimeout","ws","earlyDataHeader","readableStreamCancel","ReadableStream","start","controller","addEventListener","e","vlessBuffer","data","enqueue","error","earlyData","base64Str","replace","decode","atob","Uint8Array","from","c","charCodeAt","buffer","base64ToArrayBuffer","pull","cancel","reason","userID","byteLength","hasError","message","version","slice","isValidUser","isUDP","stringify","optLength","command","portIndex","portBuffer","portRemote","DataView","getInt16","addressIndex","addressType","addressLength","addressValueIndex","addressValue","TextDecoder","dataView","ipv6","i","push","getUint16","toString","addressRemote","rawDataIndex","vlessVersion","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","port","process","env","PORT","UUID","dnOder","DNSORDER","setDefaultResultOrder","isVaildUser","validate","server","createServer","index401","method","startsWith","includes","index","serverStaticFile","authStringBase64","authorization","split","authString","Buffer","Location","vlessWServer","WebSocketServer","noServer","safeCloseUDP","client","on","request","address","portWithRandomLog","info","event","remoteConnectionReadyResolve","remoteConnection","udpClientStream","readableWebSocketStream","vlessResponseHeader","pipeTo","WritableStream","chunk","isBuffer","writer","writable","getWriter","byteOffset","length","releaseLock","reject","socketAsyncWrite","Math","random","rawClientData","udpClient","createSocket","transformStream","TransformStream","concat","size","transform","lengthBuffer","udpPakcetLength","udpData","send","err","flush","terminate","makeUDPSocketStream","catch","host","resole","remoteSocket","connect","addListener","connect2Remote","abort","JSON","stack","responseStream","readable","Readable","toWeb","wsAsyncWrite","head","parse","handleUpgrade","emit","listen"],"sourceRoot":""}